// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.0.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace BddVendasCSharp
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.0.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [TechTalk.SpecRun.FeatureAttribute("Custo final por trabalhador", SourceFile="CalculadoraTrabalhista.feature", SourceLine=2)]
    public partial class CustoFinalPorTrabalhadorFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "CalculadoraTrabalhista.feature"
#line hidden
        
        [TechTalk.SpecRun.FeatureInitialize()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner(null, 0);
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("pt-BR"), "Custo final por trabalhador", null, ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [TechTalk.SpecRun.FeatureCleanup()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        [TechTalk.SpecRun.ScenarioCleanup()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Criar um trabalhador que recebe um salario minimo", SourceLine=5)]
        public virtual void CriarUmTrabalhadorQueRecebeUmSalarioMinimo()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Criar um trabalhador que recebe um salario minimo", ((string[])(null)));
#line 6
this.ScenarioSetup(scenarioInfo);
#line 7
    testRunner.Given("que eu estou na pagina da calculadora", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 8
    testRunner.And("preenchi o campo salario bruto com \'937,00\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 9
 testRunner.And("preenchi o campo vale transporte com \'450,00\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 10
 testRunner.And("preenchi o campo vale refeicao com \'350,00\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 11
 testRunner.And("preenchi o campo plano de saude com \'200,00\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 12
    testRunner.When("eu clicar no botao calcular", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 13
    testRunner.Then("deve ser exibido o custo final de \'2376,35\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        public virtual void CriarTrabalhadoresComCategoriaA_BCDehgdhbvdshs(string salario_Bruto, string vale_Transporte, string custo_Final, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Criar trabalhadores com categoria a., b, c, dehgdhbvdshs", exampleTags);
#line 17
this.ScenarioSetup(scenarioInfo);
#line 18
    testRunner.Given("que eu estou na pagina da calculadora", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 19
    testRunner.And(string.Format("preenchi o campo salario bruto com {0}", salario_Bruto), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 20
 testRunner.And(string.Format("preenchi o campo vale transporte com {0}", vale_Transporte), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 21
 testRunner.When("eu clicar no botao calcular", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 22
    testRunner.Then(string.Format("deve ser exibido o custo final de {0}", custo_Final), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Criar trabalhadores com categoria a., b, c, dehgdhbvdshs, 122", SourceLine=25)]
        public virtual void CriarTrabalhadoresComCategoriaA_BCDehgdhbvdshs_122()
        {
            this.CriarTrabalhadoresComCategoriaA_BCDehgdhbvdshs("122", "21", "12", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Criar trabalhadores com categoria a., b, c, dehgdhbvdshs, 121122", SourceLine=25)]
        public virtual void CriarTrabalhadoresComCategoriaA_BCDehgdhbvdshs_121122()
        {
            this.CriarTrabalhadoresComCategoriaA_BCDehgdhbvdshs("121122", "2132", "1233", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.TestRunCleanup()]
        public virtual void TestRunCleanup()
        {
            TechTalk.SpecFlow.TestRunnerManager.GetTestRunner().OnTestRunEnd();
        }
    }
}
#pragma warning restore
#endregion
